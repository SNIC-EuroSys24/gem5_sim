#ifndef __PARAMS__DerivO3CPU__
#define __PARAMS__DerivO3CPU__

class DerivO3CPU;

#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <string>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <string>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <string>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "params/FUPool.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <string>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include <string>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <string>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include "base/types.hh"

#include "params/BaseCPU.hh"

struct DerivO3CPUParams
    : public BaseCPUParams
{
    DerivO3CPU * create();
    unsigned renameWidth;
    int smtLSQThreshold;
    unsigned BTBEntries;
    unsigned dispatchWidth;
    Cycles iewToRenameDelay;
    unsigned numROBEntries;
    unsigned squashWidth;
    Cycles renameToROBDelay;
    unsigned SQEntries;
    unsigned SSITSize;
    unsigned fetchWidth;
    unsigned backComSize;
    std::string smtCommitPolicy;
    Cycles commitToIEWDelay;
    Cycles commitToDecodeDelay;
    Cycles decodeToRenameDelay;
    Cycles fetchToDecodeDelay;
    unsigned issueWidth;
    bool LSQCheckLoads;
    unsigned globalCtrBits;
    Cycles commitToRenameDelay;
    unsigned choicePredictorSize;
    unsigned cachePorts;
    Cycles renameToDecodeDelay;
    std::string smtFetchPolicy;
    unsigned store_set_clear_period;
    unsigned numPhysFloatRegs;
    unsigned numPhysIntRegs;
    unsigned RASSize;
    unsigned wbDepth;
    Cycles issueToExecuteDelay;
    std::string predType;
    int smtROBThreshold;
    unsigned smtNumFetchingThreads;
    unsigned wbWidth;
    Cycles commitToFetchDelay;
    Cycles fetchTrapLatency;
    FUPool * fuPool;
    unsigned localHistoryTableSize;
    Cycles decodeToFetchDelay;
    Cycles renameToFetchDelay;
    unsigned LSQDepCheckShift;
    unsigned decodeWidth;
    Cycles trapLatency;
    std::string smtIQPolicy;
    unsigned globalHistoryBits;
    bool needsTSO;
    std::string smtROBPolicy;
    unsigned localPredictorSize;
    unsigned choiceCtrBits;
    unsigned numRobs;
    unsigned localHistoryBits;
    Cycles iewToDecodeDelay;
    std::string smtLSQPolicy;
    unsigned commitWidth;
    unsigned globalPredictorSize;
    unsigned localCtrBits;
    unsigned instShiftAmt;
    unsigned forwardComSize;
    unsigned BTBTagSize;
    unsigned numIQEntries;
    unsigned activity;
    unsigned LFSTSize;
    Cycles iewToCommitDelay;
    Cycles renameToIEWDelay;
    Cycles iewToFetchDelay;
    unsigned LQEntries;
    int smtIQThreshold;
};

#endif // __PARAMS__DerivO3CPU__
