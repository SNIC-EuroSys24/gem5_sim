#!/usr/bin/ruby
require 'fileutils'

gem5home = Dir.new(Dir.pwd)
puts gem5home.path

$synthbench_dir = (Dir.pwd+"/tests/test-progs/test/arm/");

unless File.directory? File.expand_path(Dir.pwd+"/scriptgen")
    FileUtils.mkdir_p File.expand_path(Dir.pwd+"/scriptgen")
end
unless File.directory? File.expand_path(Dir.pwd+"/results")
    FileUtils.mkdir_p File.expand_path(Dir.pwd+"/results")
end
$scriptgen_dir = Dir.new(Dir.pwd+"/scriptgen")

#Gem5 options
$maxtinsts = 10**8
$maxtick = 2*10**15 
$cpus = [ "detailed", "timing"]
$cacheSizes = [0,1,2,4]

#dramsim options
$device = "DDR3_micron_16M_8B_x8_sg15.ini"
$schemes = ["tp","none"]

#benchmark options
$duration = 60 * 10**6 #randmem duration in us
$periods = (0..2).map{|x| 10**x}  #in us

def sav_script( test, cpu, scheme, cacheSize, period )
    filename = "#{scheme}_#{cpu}_#{test}#{period}_c#{cacheSize}MB"
    script = File.new($scriptgen_dir.path+
                      "/run_#{filename}","w+")
    script.puts("#!/bin/bash")
    script.puts("build/ARM/gem5.fast \\")
    script.puts("    --stats-file=#{filename}_stats.txt \\")
    script.puts("    configs/dramsim2/dramsim2_se.py \\")
    script.puts("    --cpu-type=#{cpu} \\")
    script.puts("    --caches \\")
    script.puts("    --l2cache \\")
    unless cacheSize == 0
        script.puts("    --l3cache \\")
        script.puts("    --l3_size=#{cacheSize}MB\\")
    end
    script.puts("    --maxinsts=#{$maxtinsts} \\")
    script.puts("    --maxtick=#{$maxtick} \\")
    script.puts("    --dramsim2 \\")
    script.puts("    --numpids=2 \\")
    script.puts("    --tpturnlength=6 \\")
    script.puts("    --devicecfg="+
                "./ext/DRAMSim2/ini/#{$device} \\")
    script.puts("    --systemcfg="+
                "./ext/DRAMSim2/system_#{scheme}.ini \\")
    script.puts("    --outputfile=/dev/null \\") 
    script.puts("    --p0='#{$synthbench_dir}" +
                "#{test} -d #{$duration} -p #{period}'\\")
    script.puts("    --p1='#{$synthbench_dir}nothing'\\")
    script.puts("    > results/stdout_#{filename}.out")
    script_abspath = File.expand_path(script.path)
    script.close
    system "qsub -wd #{$gem5home.path} #{script_abspath}"
end

$test = "randmem"
$cpus.product( $schemes, $cacheSizes, $periods ).each do |cpu, scheme, cacheSize, period|
    sav_script( $test, cpu, scheme, cacheSize, period )
end

$test = "hardstride"
$cpus.product( $schemes, $cacheSizes           ).each do |period, scheme, cacheSize|
    sav_script( $test, cpu, scheme, cacheSize, 1      )
end
